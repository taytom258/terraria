name: AutoBuild

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:

env:
  TEST_TAG: ghcr.io/${{ github.repository }}:test

permissions:
  packages: write
  
jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check
    
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Test
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test
        run: |
          docker run --rm ${{ env.TEST_TAG }}
          
      - name: Docker Meta - Main
        if: github.ref_name == 'main'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_OWNER }}/${{ vars.REPOSITORY }}
            ghcr.io/${{ github.repository }}
          tags: |
            latest
            type=edge
            type=ref,event=tag

      - name: Docker Meta - Dev
        if: github.ref_name == 'dev'
        id: meta-other
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_OWNER }}/${{ vars.REPOSITORY }}
            ghcr.io/${{ github.repository }}
          tags: |
            dev

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
